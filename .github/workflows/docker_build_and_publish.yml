name: Build and Publish Docker Image

on:
  workflow_dispatch:
    inputs:
      git_commit:
        description: "Git Commit Hash or Branch Name"
        required: true
        default: 'master' 
      image_tag:
        description: "Docker Image Tag"
        required: true        

env:
  DOCKER_REPO: inventoryclient12311111.azurecr.io

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    name: Inventory Server Build
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:

      # - uses: act10ns/slack@v1
      #   with:
      #     status: starting
      #   if: always()

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.x'

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{github.event.inputs.git_commit}}
          fetch-depth: 0

      - name: Determine Version
        id:   gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
        with:
          additionalArguments: '/overrideconfig mode=Mainline /showConfig'
      
      - name: Extract branch name and clean up special characters
        shell: bash
        run: |
          uncleanBranchName=$(echo ${GITHUB_REF#refs/heads/})
          cleanedBranchName=$(echo $uncleanBranchName | tr -dc '[:alnum:]\n\r' | tr '[:upper:]' '[:lower:]')
          echo "Unclean: $uncleanBranchName - Clean: $cleanedBranchName"
          echo "##[set-output name=branch;]$(echo $cleanedBranchName)"
          echo "::set-output name=SHORT_COMMIT_ID::$(git rev-parse --short HEAD)"
        id: extract_branch

      - name: Build Docker Images
        id: Build_Docker_Images
        run: |
          export IMAGE_TAG=${{ steps.extract_branch.outputs.SHORT_COMMIT_ID }}
          docker-compose build --build-arg COMMIT_HASH=$GIT_HASH_IMAGE_TAG

      - name: Login to Azure Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKER_REPO }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Publish Images
        id: Push_Docker_Images
        run: |
          echo BRANCH: ${{ steps.extract_branch.outputs.branch }}
          echo VERSION: $GITVERSION_SEMVER
          echo VERSION: $GITVERSION_NUGETVERSIONV2
          IMAGE_TAG=${{github.event.inputs.image_tag}}
          GIT_HASH_IMAGE_TAG=${{ steps.extract_branch.outputs.SHORT_COMMIT_ID }}
          for image in `docker images ${{ env.DOCKER_REPO }}/*:${GIT_HASH_IMAGE_TAG} --format "{{.Repository}}"`
          do

            docker tag ${image}:$GIT_HASH_IMAGE_TAG ${image}:$IMAGE_TAG
            docker push ${image}:$GIT_HASH_IMAGE_TAG
            docker push ${image}:$IMAGE_TAG

            docker rmi ${image}:$GIT_HASH_IMAGE_TAG
            docker rmi ${image}:$IMAGE_TAG

          done

      # - name: Trigger deployment
      #   id: trigger_deployment
      #   if: contains(github.ref, 'develop')
      #   run: |
      #     curl -X POST https://api.github.com/repos/LakesideLabs/inventory.bootstrap/dispatches \
      #     -H 'Authorization: Bearer ${{ secrets.ACTIONS_ACCESS_TOKEN }}' \
      #     --data '{"event_type": "docker_build_complete","client_payload": {"apiimagetag": "develop", "uiimagetag": "develop", "environment": "dev", "host": "aexinventorydev.eastus.cloudapp.azure.com"}}'

      # - uses: act10ns/slack@v1
      #   with:
      #     status: ${{ job.status }}
      #     steps: ${{ toJson(steps) }}
      #   if: always()